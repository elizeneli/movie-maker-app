{"ast":null,"code":"var _jsxFileName = \"/home/almedin/Desktop/movie-maker-app/frontend/src/containers/Movies.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport SingleMovie from '../components/SingleMovie';\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst listAllMovies = gql`\n  query {\n    listMovies {\n      name\n      genre\n      year\n    }\n  }\n`;\nconst Movies = () => {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(listAllMovies);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"loading\",\n    children: \"We are loading your movies...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error\",\n    children: [\"Cannot fetch your movies! : \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }, this);\n  if (data && data.listMovies.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"no-movies\",\n    children: \"Please add some movies first\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 52\n  }, this);\n\n  // Log the data only after it's fetched\n  if (data) {\n    console.log(data, \"fetched data\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies\",\n    children: data === null || data === void 0 ? void 0 : data.listMovies.map((movie, index) => /*#__PURE__*/_jsxDEV(SingleMovie, {\n      movieName: movie.name,\n      movieGenre: movie.genre,\n      movieYear: movie.year\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Movies, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","SingleMovie","gql","useQuery","jsxDEV","_jsxDEV","listAllMovies","Movies","_s","loading","error","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","listMovies","length","console","log","map","movie","index","movieName","name","movieGenre","genre","movieYear","year","_c","$RefreshReg$"],"sources":["/home/almedin/Desktop/movie-maker-app/frontend/src/containers/Movies.js"],"sourcesContent":["import React from 'react';\nimport SingleMovie from '../components/SingleMovie';\nimport { gql, useQuery } from '@apollo/client';\n\nconst listAllMovies = gql`\n  query {\n    listMovies {\n      name\n      genre\n      year\n    }\n  }\n`;\n\nconst Movies = () => {\n  const { loading, error, data } = useQuery(listAllMovies);\n\n  if (loading) return <p className='loading'>We are loading your movies...</p>;\n  if (error) return <p className='error'>Cannot fetch your movies! : {error.message}</p>;\n  if (data && data.listMovies.length === 0) return <p className='no-movies'>Please add some movies first</p>;\n\n  // Log the data only after it's fetched\n  if (data) {\n    console.log(data, \"fetched data\");\n  }\n\n  return (\n    <div className='movies'>\n      {data?.listMovies.map((movie, index) => (\n        <SingleMovie\n          key={index}\n          movieName={movie.name}\n          movieGenre={movie.genre}\n          movieYear={movie.year}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGJ,GAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMK,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGR,QAAQ,CAACG,aAAa,CAAC;EAExD,IAAIG,OAAO,EAAE,oBAAOJ,OAAA;IAAGO,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAA6B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC5E,IAAIP,KAAK,EAAE,oBAAOL,OAAA;IAAGO,SAAS,EAAC,OAAO;IAAAC,QAAA,GAAC,8BAA4B,EAACH,KAAK,CAACQ,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EACtF,IAAIN,IAAI,IAAIA,IAAI,CAACQ,UAAU,CAACC,MAAM,KAAK,CAAC,EAAE,oBAAOf,OAAA;IAAGO,SAAS,EAAC,WAAW;IAAAC,QAAA,EAAC;EAA4B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;;EAE1G;EACA,IAAIN,IAAI,EAAE;IACRU,OAAO,CAACC,GAAG,CAACX,IAAI,EAAE,cAAc,CAAC;EACnC;EAEA,oBACEN,OAAA;IAAKO,SAAS,EAAC,QAAQ;IAAAC,QAAA,EACpBF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,UAAU,CAACI,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACjCpB,OAAA,CAACJ,WAAW;MAEVyB,SAAS,EAAEF,KAAK,CAACG,IAAK;MACtBC,UAAU,EAAEJ,KAAK,CAACK,KAAM;MACxBC,SAAS,EAAEN,KAAK,CAACO;IAAK,GAHjBN,KAAK;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIX,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACT,EAAA,CAxBID,MAAM;EAAA,QACuBJ,QAAQ;AAAA;AAAA6B,EAAA,GADrCzB,MAAM;AA0BZ,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}