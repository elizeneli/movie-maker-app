{"ast":null,"code":"var _jsxFileName = \"/home/almedin/Desktop/movie-maker-app/frontend/src/components/AddMovie.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { gql, useMutation } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst listAllMovies = gql`\n  query {\n    listMovies {\n      name\n      genre\n      year\n    }\n  }\n`;\nconst addNewMovie = gql`\n  mutation AddNewMovie($name: String!, $genre: String!, $year: String!) {\n    addMovie(name: $name, genre: $genre, year: $year) {\n      name\n      genre\n      year\n    }\n  }\n`;\nconst AddMovie = () => {\n  _s();\n  const submitMovie = async e => {\n    e.preventDefault();\n    try {\n      const {\n        data\n      } = await newMovieData({\n        variables: {\n          name: movieName,\n          genre: movieGenre,\n          year: movieYear\n        },\n        refetchQueries: [{\n          query: listAllMovies\n        }]\n      });\n      console.log(data.addMovie);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const [movieName, setMovieName] = useState('');\n  const [movieGenre, setMovieGenre] = useState('');\n  const [movieYear, setMovieYear] = useState('');\n  const [newMovieData, {\n    loading,\n    error\n  }] = useMutation(addNewMovie);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"loading\",\n    children: \"Submitting your movie...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error\",\n    children: [\"Cannot add your movie!: $\", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addMovie\",\n    id: \"addNewMovie\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitMovie,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Movie Name\",\n        required: true,\n        onChange: e => setMovieName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Movie Genre\",\n        required: true,\n        onChange: e => setMovieGenre(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Movie Year\",\n        onChange: e => setMovieYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        smooth: true,\n        to: \"#header\",\n        className: \"top-button\",\n        children: \"Back to top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(AddMovie, \"ddxDK/Wtno6vNjdoJbkkLoF3yf8=\", false, function () {\n  return [useMutation];\n});\n_c = AddMovie;\nexport default AddMovie;\nvar _c;\n$RefreshReg$(_c, \"AddMovie\");","map":{"version":3,"names":["React","useState","HashLink","Link","gql","useMutation","jsxDEV","_jsxDEV","listAllMovies","addNewMovie","AddMovie","_s","submitMovie","e","preventDefault","data","newMovieData","variables","name","movieName","genre","movieGenre","year","movieYear","refetchQueries","query","console","log","addMovie","error","setMovieName","setMovieGenre","setMovieYear","loading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","id","onSubmit","type","placeholder","required","onChange","target","value","smooth","to","_c","$RefreshReg$"],"sources":["/home/almedin/Desktop/movie-maker-app/frontend/src/components/AddMovie.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { gql, useMutation } from '@apollo/client';\n\nconst listAllMovies = gql`\n  query {\n    listMovies {\n      name\n      genre\n      year\n    }\n  }\n`\n\nconst addNewMovie = gql`\n  mutation AddNewMovie($name: String!, $genre: String!, $year: String!) {\n    addMovie(name: $name, genre: $genre, year: $year) {\n      name\n      genre\n      year\n    }\n  }\n`\n\nconst AddMovie = () => {\n  const submitMovie = async (e) => {\n    e.preventDefault()\n    try {\n      const { data } = await newMovieData({\n        variables: {\n          name: movieName,\n          genre: movieGenre,\n          year: movieYear\n        },\n        refetchQueries: [{\n          query: listAllMovies\n        }]\n      })\n      console.log(data.addMovie); \n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const [movieName, setMovieName] = useState('')\n  const [movieGenre, setMovieGenre] = useState('')\n  const [movieYear, setMovieYear] = useState('')\n\n  const [newMovieData, { loading, error }] = useMutation(addNewMovie);\n\n  if (loading) return <p className='loading'>Submitting your movie...</p>\n  if (error) return <p className='error'>Cannot add your movie!: ${error.message}</p>\n\n  return ( \n    <div className='addMovie' id=\"addNewMovie\">\n      <form onSubmit={submitMovie}>\n        <input type=\"text\" placeholder='Movie Name' required onChange={(e) => setMovieName(e.target.value)}/>\n        <input type=\"text\" placeholder='Movie Genre' required onChange={(e) => setMovieGenre(e.target.value)}/>\n        <input type=\"text\" placeholder='Movie Year' onChange={(e) => setMovieYear(e.target.value)}/>\n        <button>Add Movie</button>\n      </form>\n      <div className='top'>\n        <Link smooth to=\"#header\" className='top-button'>Back to top</Link>\n      </div>\n    </div>\n   );\n}\n \nexport default AddMovie;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}